@model MSWD.Models.Client

@{
    ViewBag.Title = "Client";

    OptionListsHelper lists = new OptionListsHelper();
}

<div id="addNoteModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            @using (Html.BeginForm("AddNote", "Clients", FormMethod.Post))
            {
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Add Note</h4>
                </div>
                <div class="modal-body">
                    <label class="control-label">Content</label>
                    <input class="form-control" name="Content" />
                    <input type="hidden" name="ClientId" value="@Model.ClientId"/>
                </div>
                <div class="modal-footer">
                    <button type="submit" class="btn btn-success">Submit</button>
                </div>
            }
        </div>

    </div>
</div>

<div class="container">
    <div class="page-title">
        <div class="row">
            <div class="col-md-8 header-page">
                <a href="@Url.Action("Index")">@ViewBag.Title</a>&emsp;>&emsp;<font class="red-highlight">Manage</font>
            </div>

            <div class="col-md-2">
                @if (Model.SeniorCitizen != null)
                {
                    <a class="btn btn-warning btn-block" data-toggle="tooltip" title="View Senior Citizen Info" href="#">Senior Citizen <span class="glyphicon glyphicon-share"></span></a>
                }

                @if (Model.SoloParent != null)
                {
                    <a class="btn btn-warning btn-block" data-toggle="tooltip" title="View Solo Parent Info" href="#">Solo Parent <span class="glyphicon glyphicon-share"></span></a>
                }

                @if (Model.Pwd != null)
                {
                    <a class="btn btn-warning btn-block" data-toggle="tooltip" title="View PWD Info" href="#">PWD <span class="glyphicon glyphicon-share"></span></a>
                }
            </div>

            <div class="col-md-2">
                <button type="button" class="btn btn-info btn-block" data-toggle="modal" data-target="#addNoteModal">
                    Add Note <span class="glyphicon glyphicon-plus"></span>
                </button>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-md-7 shadow-right">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.ClientId)
                    @Html.HiddenFor(model => model.DateCreated)
                    @Html.HiddenFor(model => model.CityId)

                    <div class="form-group">
                        <div class="form-header">
                            <div class="col-md-12">
                                <h4>General Info</h4>
                            </div>
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.GivenName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.GivenName, new { htmlAttributes = new { @class = "form-control", @maxlength = "32" } })
                            @Html.ValidationMessageFor(model => model.GivenName, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.MiddleName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.MiddleName, new { htmlAttributes = new { @class = "form-control", @maxlength = "32" } })
                            @Html.ValidationMessageFor(model => model.MiddleName, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.SurName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.SurName, new { htmlAttributes = new { @class = "form-control", @maxlength = "32" } })
                            @Html.ValidationMessageFor(model => model.SurName, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-3">
                            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label" })

                            @if (Model.BirthDate != null)
                            {
                                @Html.TextBoxFor(m => m.BirthDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", @value = Model.BirthDate.ToString("yyyy-MM-dd") })
                                
                                @*
                                    @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control", @type = "Date", @value = Model.BirthDate.ToString("yyyy-MM-dd") } })
                                *@
                                
                            }
                            else
                            {
                                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control", @type = "Date" } })
                            }

                            
                            @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.BirthPlace, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.BirthPlace, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.BirthPlace, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.Gender, lists.GenderList, "-- Select Gender --", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-3">
                            @Html.LabelFor(model => model.CivilStatus, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.CivilStatus, lists.CivilStatusList, "-- Select Status --", new { @class = "form-control civil-status-input" })
                            @Html.ValidationMessageFor(model => model.CivilStatus, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <br /><br />

                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.CityAddress, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.CityAddress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CityAddress, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-6">
                            @Html.LabelFor(model => model.ProvincialAddress, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.ProvincialAddress, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ProvincialAddress, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <br /><br />

                    <div class="form-group marriage-form">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.DateOfMarriage, htmlAttributes: new { @class = "control-label" })

                            @if (Model.DateOfMarriage != null)
                            {
                                @Html.TextBoxFor(m => m.DateOfMarriage, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", @value = Model.DateOfMarriage.Value.ToString("yyyy-MM-dd") })
                            }
                            else
                            {
                                @Html.EditorFor(model => model.DateOfMarriage, new { htmlAttributes = new { @class = "form-control", @type = "Date" } })
                            }


                            @Html.ValidationMessageFor(model => model.DateOfMarriage, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-6">
                            @Html.LabelFor(model => model.PlaceOfMarriage, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.PlaceOfMarriage, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.PlaceOfMarriage, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group marriage-form">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.SpouseName, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.SpouseName, new { htmlAttributes = new { @class = "form-control", @maxlength = "32" } })
                            @Html.ValidationMessageFor(model => model.SpouseName, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.SpouseBirthDate, htmlAttributes: new { @class = "control-label" })

                            @if (Model.SpouseBirthDate != null)
                            {
                                @Html.TextBoxFor(m => m.SpouseBirthDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", @value = Model.SpouseBirthDate.Value.ToString("yyyy-MM-dd") })
                            }
                            else
                            {
                                @Html.EditorFor(model => model.SpouseBirthDate, new { htmlAttributes = new { @class = "form-control", @type = "Date" } })
                            }

                            @Html.ValidationMessageFor(model => model.SpouseBirthDate, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.SpouseBluCardNo, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.SpouseBluCardNo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.SpouseBluCardNo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <br /><br />

                    <div class="form-group">
                        <div class="col-md-4">
                            @Html.LabelFor(model => model.Religion, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Religion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Religion, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.TypeOfResidency, htmlAttributes: new { @class = "control-label" })
                            @Html.DropDownListFor(model => model.TypeOfResidency, lists.ResidencyList, "-- Select Residency Type --", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.TypeOfResidency, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-4">
                            @Html.LabelFor(model => model.StartOfResidency, htmlAttributes: new { @class = "control-label" })

                            @if (Model.StartOfResidency != null)
                            {
                                @Html.TextBoxFor(m => m.StartOfResidency, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", @value = Model.StartOfResidency.Value.ToString("yyyy-MM-dd") })
                            }
                            else
                            {
                                @Html.EditorFor(model => model.StartOfResidency, new { htmlAttributes = new { @class = "form-control", @type = "Date" } })
                            }

                            @Html.ValidationMessageFor(model => model.StartOfResidency, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Occupation, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Occupation, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Occupation, "", new { @class = "text-danger" })
                        </div>

                        <div class="col-md-6">
                            @Html.LabelFor(model => model.Citizenship, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Citizenship, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Citizenship, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <br /><br />

                    <div class="beneficiary-section">
                        <div class="form-group">
                            <div class="form-header">
                                <div class="col-md-12">
                                    <h4 style="display:inline-block;">Beneficiaries</h4>
                                    &emsp;
                                    <button type="button" class="btn btn-info btn-xs add-beneficiary" style="line-height:30px;">
                                        Add <span class="glyphicon glyphicon-plus"></span>
                                    </button>
                                    &emsp;
                                    <button type="button" class="btn btn-danger btn-xs deduct-beneficiary" style="line-height:30px;">
                                        Remove <span class="glyphicon glyphicon-minus"></span>
                                    </button>
                                </div>
                            </div>
                        </div>

                        @if (Model.ClientBeneficiaries.Count != 0)
                        {
                            for (int i = 0; i < Model.ClientBeneficiaries.Count; i++)
                            {
                                <div class="row-beneficiary">
                                    @Html.HiddenFor(model => model.ClientBeneficiaries[i].ClientBeneficiaryId)
                                    @Html.HiddenFor(model => model.ClientBeneficiaries[i].ClientId)

                                    <div class="form-group">
                                        <div class="col-md-6">
                                            @Html.LabelFor(model => model.ClientBeneficiaries[i].Name, htmlAttributes: new { @class = "control-label", @maxlength="32" })
                                            @Html.EditorFor(model => model.ClientBeneficiaries[i].Name, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.ClientBeneficiaries[i].Name, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.ClientBeneficiaries[i].Relationship, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.ClientBeneficiaries[i].Relationship, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.ClientBeneficiaries[i].Relationship, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.ClientBeneficiaries[i].BirthDate, htmlAttributes: new { @class = "control-label" })

                                            @if (Model.ClientBeneficiaries[i].BirthDate != null)
                                            {
                                                @Html.TextBoxFor(model => model.ClientBeneficiaries[i].BirthDate, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", @value = Model.ClientBeneficiaries[i].BirthDate.Value.ToString("yyyy-MM-dd") })
                                            }
                                            else
                                            {
                                                @Html.EditorFor(model => model.ClientBeneficiaries[i].BirthDate, new { htmlAttributes = new { @class = "form-control", @type = "Date" } })
                                            }
                                            
                                            @Html.ValidationMessageFor(model => model.ClientBeneficiaries[i].BirthDate, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.ClientBeneficiaries[i].ContactNumber, htmlAttributes: new { @class = "control-label", @style = "font-size:0.8em;" })
                                            @Html.EditorFor(model => model.ClientBeneficiaries[i].ContactNumber, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.ClientBeneficiaries[i].ContactNumber, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.ClientBeneficiaries[i].CivilStatus, htmlAttributes: new { @class = "control-label" })
                                            @Html.DropDownListFor(model => model.ClientBeneficiaries[i].CivilStatus, lists.CivilStatusList, "-- Select Residency Type --", new { @class = "form-control", @value = Model.ClientBeneficiaries[i].CivilStatus })
                                            @Html.ValidationMessageFor(model => model.ClientBeneficiaries[i].CivilStatus, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.ClientBeneficiaries[i].Occupation, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.ClientBeneficiaries[i].Occupation, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.ClientBeneficiaries[i].Occupation, "", new { @class = "text-danger" })
                                        </div>

                                        <div class="col-md-3">
                                            @Html.LabelFor(model => model.ClientBeneficiaries[i].Income, htmlAttributes: new { @class = "control-label" })
                                            @Html.EditorFor(model => model.ClientBeneficiaries[i].Income, new { htmlAttributes = new { @class = "form-control", @type = "Number" } })
                                            @Html.ValidationMessageFor(model => model.ClientBeneficiaries[i].Income, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            }
                        }
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-9 col-md-3">
                            <br />
                            <input type="submit" value="Submit" class="btn btn-lg btn-success btn-block" />
                        </div>
                    </div>
                </div>
            }
        </div>

        <div class="col-md-5">
            <div class="form-group">
                <div class="form-header">
                    <div class="col-md-4">
                        <h4>Notes</h4>
                    </div>

                    <div class="col-md-8">
                        <input class="form-control notes-search" placeholder="Search"/>
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-12" style="margin-top:55px;">
                    <table id="table-notes" class="table no-sort">
                        <thead>
                            <tr>
                                <th>Content</th>
                                <th></th>
                            </tr>
                        </thead>

                        <tbody>
                            @foreach (var i in Model.ClientNotes.OrderByDescending(c=>c.DateCreated))
                            {
                                <tr data-toggle="tooltip" title="@i.DateCreated - @i.CreatedBy.UserName">
                                    @if (i.Done == 0)
                                    {
                                        <td style="color:#4f4f4f;">@i.Note</td>
                                    }
                                    else
                                    {
                                        <td style="color:#0c9a0f;"><strong>@i.Note</strong></td>
                                    }

                                    <td style="text-align:right;">
                                        @if (i.Done == 0)
                                        {
                                            <a class="btn btn-xs btn-success" href="@Url.Action("MarkDone","Clients",new { @id=i.ClientNoteId })">
                                                <span class="glyphicon glyphicon-check"></span>
                                            </a>
                                        }

                                        <a class="btn btn-xs btn-danger" href="@Url.Action("RemoveNote","Clients",new { @id=i.ClientNoteId })">
                                            <span class="glyphicon glyphicon-remove"></span>
                                        </a>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            @*
                <div class="form-group">
                    <div class="form-header" style="margin-top:30px;">
                        <div class="col-md-4">
                            <h4>Mobile #</h4>
                        </div>

                        <div class="col-md-8">
                            <input class="form-control mobile-numbers-search" placeholder="Search" />
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-12" style="margin-top:55px;">
                        <table id="table-mobile-numbers" class="table no-sort">
                            <thead>
                                <tr>
                                    <th>Number</th>
                                    <th></th>
                                </tr>
                            </thead>

                            <tbody>
                                @foreach (var i in Model.ClientNotes.OrderByDescending(c => c.DateCreated))
                                {
                                    <tr data-toggle="tooltip" title="@i.DateCreated - @i.CreatedBy.UserName">
                                        @if (i.Done == 0)
                                        {
                                            <td style="color:#4f4f4f;">@i.Note</td>
                                        }
                                        else
                                        {
                                            <td style="color:#0c9a0f;"><strong>@i.Note</strong></td>
                                        }

                                        <td style="text-align:right;">
                                            @if (i.Done == 0)
                                            {
                                                <a class="btn btn-xs btn-success" href="@Url.Action("MarkDone","Clients",new { @id=i.ClientNoteId })">
                                                    <span class="glyphicon glyphicon-check"></span>
                                                </a>
                                            }

                                            <a class="btn btn-xs btn-danger" href="@Url.Action("RemoveNote","Clients",new { @id=i.ClientNoteId })">
                                                <span class="glyphicon glyphicon-remove"></span>
                                            </a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            *@
            
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    
    <script>
        $(document).ready(function () {
            var datatable = $("#table-notes").DataTable({
                paging: true,
                "pageLength": 20,
                "dom": "<'row'<'table-container'<'table-responsive'rt>>><'table-footer'<'col-md-12'i>>",
                "columnDefs": [
                    { "orderable": false, "targets": 0 },
                    { "orderable": false, "targets": 1 }
                ]
            });

            $(".notes-search").keyup(function () {
                datatable.search($(this).val()).draw();
            })
        });

        $(document).ready(function () {
            var datatable = $("#table-mobile-numbers").DataTable({
                paging: true,
                "pageLength": 20,
                "dom": "<'row'<'table-container'<'table-responsive'rt>>><'table-footer'<'col-md-12'i>>",
                "columnDefs": [
                    { "orderable": false, "targets": 0 },
                    { "orderable": false, "targets": 1 }
                ]
            });

            $(".mobile-numbers-search").keyup(function () {
                datatable.search($(this).val()).draw();
            })
        });
    </script>

    <script>
        $(".deduct-beneficiary").click(function () {
            var i = $(".row-beneficiary").length;

            $(".row-beneficiary").eq(i - 1).remove();
        });

        $(".add-beneficiary").click(function () {
            var i = $(".row-beneficiary").length;

            var civilStatusList = "";

            @foreach(var i in lists.CivilStatusList) {
                @:civilStatusList += "<option value='@i.Value'>@i.Text</option>";
            }

            var html =
                "<div class='row-beneficiary'>" +
                    "<input type='hidden' name='ClientBeneficiaries["+i+"].ClientId' value='@Model.ClientId'>"+
                    "<div class='form-group'>" +
                        "<div class='col-md-6'>" +
                            "<label class='control-label'>Name</label>" +
                            "<input class='form-control' name='ClientBeneficiaries[" + i + "].Name' maxlength='32' />" +
                        "</div>" +
                        "<div class='col-md-3'>" +
                            "<label class='control-label'>Relationship</label>" +
                            "<input class='form-control' name='ClientBeneficiaries[" + i + "].Relationship' />" +
                        "</div>" +
                        "<div class='col-md-3'>" +
                            "<label class='control-label'>BirthDate</label>" +
                            "<input class='form-control' name='ClientBeneficiaries[" + i + "].BirthDate' type='Date' />" +
                        "</div>" +
                    "</div>" +
                    "<div class='form-group'>" +
                        "<div class='col-md-3'>" +
                            "<label class='control-label'>ContactNumber</label>" +
                            "<input class='form-control' name='ClientBeneficiaries[" + i + "].ContactNumber' />" +
                        "</div>" +
                        "<div class='col-md-3'>" +
                            "<label class='control-label'>CivilStatus</label>" +
                            "<select class='form-control' name='ClientBeneficiaries[" + i + "].CivilStatus'>" +
                                "<option value>-- Select Status --</option>" +
                                civilStatusList +
                            "</select>" +
                        "</div>" +
                        "<div class='col-md-3'>" +
                            "<label class='control-label'>Occupation</label>" +
                            "<input class='form-control' name='ClientBeneficiaries[" + i + "].Occupation' />" +
                        "</div>" +
                        "<div class='col-md-3'>" +
                            "<label class='control-label'>Income</label>" +
                            "<input class='form-control' name='ClientBeneficiaries[" + i + "].Income' type='Number' />" +
                        "</div>" +
                    "</div>" +
                "</div>";

            $(".beneficiary-section").append(html);
        });

        $(Document).on("change", ".civil-status-input", function () {
            var i = $(".marriage-form").length;

            if ($(this).val() == "Married" || $(this).val() == "Widowed") {
                while (i--) {
                    $(".marriage-form").eq(i).show();
                }
            } else {
                while (i--) {
                    $(".marriage-form").eq(i).hide();
                    $(".marriage-form").eq(i).find(".form-control").val(null);
                }
            }
        });
    </script>
}
